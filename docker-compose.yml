version: '3.8'

services:
  # Spark Master
  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"  # Spark Master Web UI
      - "7077:7077"  # Spark Master Port
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./scripts:/opt/bitnami/spark/scripts
    networks:
      - spark-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark-worker
    hostname: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8081:8081"  # Spark Worker Web UI
    volumes:
      - ./data:/opt/bitnami/spark/data
      - ./scripts:/opt/bitnami/spark/scripts
    depends_on:
      - spark-master
    networks:
      - spark-network

  # Spark Job Runner
  spark-job:
    build:
      context: .
      dockerfile: Dockerfile.spark
    container_name: spark-job
    environment:
      - CSV_PATH=/opt/spark/work-dir/data/split_raw/*.csv
      - PARQUET_PATH=/opt/spark/work-dir/data/processed/taxi_clean.parquet
    volumes:
      - ./data:/opt/spark/work-dir/data
    depends_on:
      - spark-master
      - spark-worker
    networks:
      - spark-network
    profiles:
      - job  # Profile para executar apenas quando necess√°rio

  # FastAPI Application
  taxi-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: taxi-api
    environment:
      - API_PORT=8001
      - PARQUET_PATH=/app/data/processed/taxi_clean.parquet
    ports:
      - "8001:8001"  # API Port
    volumes:
      - ./data:/app/data
    depends_on:
      - spark-job
    networks:
      - spark-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  spark-network:
    driver: bridge

volumes:
  spark-data:
  api-data:
